server:
  port: 8080

spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver

    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    accountLockMillis: 60000

  data:
    redis:
      host: localhost
      port: 6379
      # Token is valid 20 minute
      token-validity-in-seconds: 1200
      # Otp is valid 1 minute
      otp-validity-in-seconds: 60

  main:
    web-application-type: reactive

  devtools:
    livereload:
      enabled: false
  security:
    user:
      name: admin
      password: admin123

logging:
  level:
    root: info
    org:
      springframework:
        security: error

security:
  debug: true
  authentication:
    jwt:
      # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
      base64-secret: MzZkOTQ4Y2Y4MDIyNjEyNjJiYjA1M2IwZjY4NGFmN2ZhY2IxNWNjMmY0NTFhYjBjNTY3YTQ1MTlmOTRhMTFlYTNiMjRmYTg2OTYxNGYwZTllMjI3ZDA2ZGYyNGNhNDIzMDQ1OTJjNWM2NmMwMWE5YTAzYjdiYjExYWRjYjdjMTE=
      # Token is valid 20 minute
      token-validity-in-seconds: 1200
      token-validity-in-seconds-for-remember-me: 2592000
  whileList: /auth/ver1/login/authenticate,/auth/ver1/logOut,/auth/ver1/login/mfa,/testPreAuthorize/**,/test/**,/auth/ver1/otp/**

#  cloud:
#    gateway:
#      routes:
#        - id: service1
#          uri: http://localhost:8081
#          predicates:
#            - Path=/service1/**
#        - id: service2
#          uri: http://localhost:8082
#          predicates:
#            - Path=/service2/**